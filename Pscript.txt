--I++
extends #Normal cc::standard[@applepie]

@reference @malloc;;@deref @interpreter::@--j+<
@reference @linux var::str
str[] = "Hello, World"

func main():
	print(str)

func addOne(var::one;=*):
	var::i = 0
	for (str[i], i::5):
		if (i !:: EOL::&)
			i++

--Reference something and using property
@extends #Normal cc:standard[@applepie]

@reference @t @wready[var] button::get(OBJECT_PATH)
var is_pressed::false

func main():
	button.press::is_pressed
	if (!is_pressed)
		button.pressed::false
	unif (is_pressed)
		button.pressed::true

--Print Something
@extends #Normal cc:standard[@applepie]

func imide();;func main():
	print("Hello, World")

--Move Character
@extends #Normal cc:standard[@applepie]

@reference @wready[var] player::get(OBJECT_PATH)
var gravity::@reference @engine["default_gravity"]
var speed::50
var jump_height::-40
var mouse_sensitivity::0.002
var velocity::@reference @engine[velocity]

func input():
	if keyboard.press("a");;velocity.x -:: speed
	unif keyboard.press("d");;velocity.x +:: speed

	if keyboard.press("w");;velocity.z -:: speed
	unif keyboard.press("s");;velocity.z +:: speed

	if keyboard.press("space")&&@reference(@t;;is_on_floor):
		velocity.y::jump_height

func physics(@reference @engine[delta]):
	velocity.y +:: -gravity * delta
	input()
	@reference(@engine[move_and_slide])

--To write out 12345

extends #Normal cc::standard[applepie]

@reference @lib_halcyon::@--I+<
@reference @linux var str::"12345"
var bool::false

func imide(@reference @engine['\n']):
	bool::true
	if bool;;true:
		@--I+<print(str)
	else:
		@--I+<print(return::NULL)

--To call a function of multiple libraries

extends #Normal cc::standard[@applepie]
@reference @lib_halcyon::@--I+<(@reference("./user/desktop/lib";;1))
@reference @lib_halcyon::@--I+<(@reference("./user/desktop/lib2";;2))
@reference @lib_halcyon::@--I+<(@reference("./user/desktop/lib3";;3))
var lib::@reference;;++<@lib_halcyon

func main(void):
	print(lib;;++<)

--Simple Variables & Get Classes

extends #Normal cc::standard[applepie]

var num::0
var i::0
var percent::0.2

@wrafs var apple::class;@reference["Apple"]

--List of all references with PScript
extends
	#All
	#Normal
	#Custom

cc
	standard
	[classed custom compiler]
	
standard[]
	@(any compiler)

variables
	int
	float
	string
	booleans
	null[free]
	StringName
	ObjectPath

vector-types
	Vector2
	Vector3
	To_Basis

spes-types
	Color
	Resource
	Object
	Array

keyword
	if
	unif
	else
	for
	while
	match
	when
	break
	continue
	pass
	return
	in
	as
	self
	signal
	func
	static
	const
	enum
	var
	void
	await
	assert
	breakpoint
	pointish
	null

sign
	+
	-
	*
	/
	\
	;
	:
	.
	,
	[]
	()
	{./}
	&
	#
	@
	!
	?
	<.>
	::
	;.
	;;
	""
	''
	==
	=

functions
	main
	physic
	proc
	init
	imide
	notify
	input
	exput

Calls
	@t
	@wrafs
	@exprt[@reference]
	@exprt_categoryf
	@export_custom
	@classfs
	@malloc
	@calloc
	@static
	@test
	@debugfs
	
Annotations
	@iconography
	@modify_rpc
	@tool
	@reference
	@linux
	@windows
	@macos
	@linux_windows_mac

Enabling & Disabling Features
	Use: Reference(@reference) to enable & Dereference(@deref) to disable

	@malloc
	@calloc
	@interpreter
	@var
	@static
	@dynamic
	@pointaamber
	@linux
	@windows
	@macos
	@wrafs
	@export
	@t
	@g
	@c
	@[]
	@f64
	@f32
	@error
	@lib_halcyon
	@linux_windows_mac

Header
	--I
	--j
	--k
	--p
	++ = single
	-+ = null
	+< = memory single
	++< = all
 	>+ = memory all
